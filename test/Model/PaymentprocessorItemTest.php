<?php
/**
 * PaymentprocessorItemTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  GeminiCommerce\Paymentprocessor
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Payment Processor Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace GeminiCommerce\Paymentprocessor\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PaymentprocessorItemTest Class Doc Comment
 *
 * @category    Class
 * @description PaymentprocessorItem
 * @package     GeminiCommerce\Paymentprocessor
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PaymentprocessorItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PaymentprocessorItem"
     */
    public function testPaymentprocessorItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_grn"
     */
    public function testPropertyProductGrn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "qty_ordered"
     */
    public function testPropertyQtyOrdered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "qty_committed"
     */
    public function testPropertyQtyCommitted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unit_sale_price"
     */
    public function testPropertyUnitSalePrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unit_list_price"
     */
    public function testPropertyUnitListPrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unit_base_price"
     */
    public function testPropertyUnitBasePrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unit_vat_amount"
     */
    public function testPropertyUnitVatAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "row_sale_price"
     */
    public function testPropertyRowSalePrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "row_list_price"
     */
    public function testPropertyRowListPrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "row_vat_amount"
     */
    public function testPropertyRowVatAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "discount_amount"
     */
    public function testPropertyDiscountAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "row_base_price"
     */
    public function testPropertyRowBasePrice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_percentage"
     */
    public function testPropertyVatPercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_inaccurate"
     */
    public function testPropertyVatInaccurate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_calculated"
     */
    public function testPropertyVatCalculated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_name"
     */
    public function testPropertyProductName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_code"
     */
    public function testPropertyProductCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_sku"
     */
    public function testPropertyProductSku()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_options"
     */
    public function testPropertyProductOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_img"
     */
    public function testPropertyProductImg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_data"
     */
    public function testPropertyProductData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment_info_reference"
     */
    public function testPropertyShipmentInfoReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "promotion_grn"
     */
    public function testPropertyPromotionGrn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_is_virtual"
     */
    public function testPropertyProductIsVirtual()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
